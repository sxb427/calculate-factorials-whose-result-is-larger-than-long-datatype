def digits_of(number):
	d=[]
	while number>0:
		d.insert(0,number%10)
		number = number/10
	return d
def add(x,y):
	add=[]
	zeros = max(len(x),len(y))-min(len(x),len(y))
	if min(len(x),len(y))==len(x):
		for i in range(zeros):
			x.insert(0,0)
	else:
		for i in range(zeros):
			y.insert(0,0)
	p = len(x)-1
	carry = 0
	while p>=0:
		add.insert(0,(x[p] + y[p] + carry)%10)
		carry = (x[p] + y[p] + carry)/10
		p=p-1
	if carry!=0:
		add.insert(0,carry)
	return add

def multiply(A,B):
	m=[]
	if len(A)<=len(B):
		a=A
		b=B
	else:
		a=B
		b=A
	for i in range(len(a[::-1])):
		y=[]
		for temp in range(i):
			y.append(0)
		carry=0
		for j in b[::-1]:
			y.insert(0,(carry + a[::-1][i]*j)%10)
			carry = (carry + a[::-1][i]*j)/10
		if carry!=0:
			y.insert(0,carry)
		m.append(y)
	r=1
	asum = m[0] 
	while r<len(m):
		asum = add(asum,m[r])
		r=r+1
	return asum
def factorial(n):
	fact = [1]
	for z in range(2,n+1):
		fact = multiply(fact,digits_of(z))
	return fact
